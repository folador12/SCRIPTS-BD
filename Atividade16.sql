CREATE TABLE Func(
    COD_FUNC INTEGER NOT NULL,
    NOME varchar(60),
    DTA_NASC DATE,
    SALARIO float,
    NRO_DEPTOCE INTEGER,
    COD_SUPERVCE INTEGER,

    PRIMARY KEY(COD_FUNC)    
);


CREATE TABLE Depto(
    NRO_DEPTO INTEGER NOT NULL,
    NOME varchar(60),
    COD_GERCE INTEGER,

    PRIMARY KEY(NRO_DEPTO)
);


CREATE TABLE Projeto(
    COD_PROJ INTEGER NOT NULL,
    NOME varchar(60),
    DURACAO decimal(10,2),
    NRO_DEPTOCE INTEGER,

    PRIMARY KEY (COD_PROJ)
);


CREATE TABLE Participa(
    COD_PROJCE INTEGER NOT NULL,
    COD_FUNCCE INTEGER NOT NULL,
    HORAS_TRAB decimal(10,2),

    PRIMARY KEY(COD_PROJCE, COD_FUNCCE)
);


--1
CREATE FUNCTION totalHorasTrabalhadasGerente(deptID INT)
RETURNS INT AS $$
DECLARE totalHoras INT;
BEGIN
  SELECT SUM(HORAS_TRAB)
  INTO totalHoras
  FROM PARTICIPA P
  JOIN PROJETO PR ON P.COD_PROJCE = PR.COD_PROJ
  JOIN DEPTO D ON PR.NRO_DEPTOCE = D.NRO_DEPTO
  WHERE D.COD_GERCE = deptID;
  
  RETURN totalHoras;
END;
$$LANGUAGE PLPGSQL;


--2
CREATE OR REPLACE FUNCTION atualizarDuracaoProjetos()
RETURNS void AS $$
BEGIN
    UPDATE PROJETO p
    SET DURACAO = (SELECT SUM(HORAS_TRAB)/8 FROM PARTICIPA WHERE COD_PROJCE = p.COD_PROJ)
    WHERE EXISTS (SELECT 1 FROM PARTICIPA WHERE COD_PROJCE = p.COD_PROJ);
   
    RETURN;
END;
$$ LANGUAGE PLPGSQL;


--3
CREATE FUNCTION excluiParticipacoesPorDepartamento(deptID INT) 
RETURNS VOID AS $$
BEGIN
  DELETE FROM PARTICIPA
  WHERE COD_PROJCE IN (SELECT COD_PROJ FROM PROJETO WHERE NRO_DEPTOCE = deptID);
END;
$$ LANGUAGE PLPGSQL;


--4
CREATE FUNCTION aumentaSalarioPorNascimento(porcentagem1 DECIMAL, porcentagem2 DECIMAL) 
RETURNS VOID AS $$
BEGIN
  UPDATE Func
  SET SALARIO = SALARIO * (1 + (porcentagem1 / 100))
  WHERE EXTRACT(YEAR FROM DTA_NASC) < 1972;
  
  UPDATE Func
  SET SALARIO = SALARIO * (1 + (porcentagem2 / 100))
  WHERE EXTRACT(YEAR FROM DTA_NASC) >= 1972;
END;
$$ LANGUAGE PLPGSQL;


--Aumento de Imoveis
CREATE OR REPLACE PROCEDURE ConsultaPrecosComAumento(
    IN aumento DECIMAL
)
LANGUAGE SQL
AS $$
BEGIN
    SELECT IMOVEIS.*, PRECO * (1 + aumento / 100) AS PRECO_COM_AUMENTO
    FROM IMOVEIS;
END;
$$;


--Inserir Dados Loja CD
CREATE OR REPLACE PROCEDURE InserirDadosLojaCD(
    IN nome_cliente VARCHAR(255),
    IN endereco VARCHAR(255),
    IN telefone VARCHAR(20)
)
LANGUAGE SQL
AS $$
BEGIN
    INSERT INTO LOJA_CD (NOME_CLIENTE, ENDERECO, TELEFONE)
    VALUES (nome_cliente, endereco, telefone);
END;
$$;

